name: Release

on:
  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: liberica
          cache: maven
          server-id: ovea-oss-snapshots
          server-username: ${{ secrets.OSS_SONATYPE_USERNAME }}
          server-password: ${{ secrets.OSS_SONATYPE_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Deploy to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSS_SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          export GPG_TTY=$(tty)
          git config user.name ${{ secrets.GIT_USERNAME }}
          git config user.email ${{ secrets.GIT_EMAIL }}
          ./mvnw -B -P publish -DskipTests deploy 

#      - name: Release to Maven Central
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSS_SONATYPE_PASSWORD }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#        run: |
#          export GPG_TTY=$(tty)
#          git config user.name ${{ secrets.GIT_USERNAME }}
#          git config user.email ${{ secrets.GIT_EMAIL }}
#          ./mvnw -B release:prepare release:perform

#      - uses: jreleaser/release-action@v2
#        env:
#          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - uses: actions/upload-artifact@v2
#        if: always()
#        with:
#          name: jreleaser-release
#          path: |
#            out/jreleaser/trace.log
#            out/jreleaser/output.properties